services:
  backend:
    build: . # build place directory
    container_name: restaurant_backend
    ports:
      - '${NEST_PORT:-3000}:3000' # host:container
    env_file: .env # load every key=value from the file
    environment: # only what must change inside the container
      DB_HOST: postgres # point Nest to the service name
      REDIS_HOST: redis
      NODE_ENV: development # or "production" for prod stack
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }

    volumes:
      - .:/app # mount whole repo for hot-reload
      - backend_node_modules:/app/node_modules # keeps the node_modules in the container persistent
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    ports:
      - '${DB_PORT:-5432}:5432'
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis_server
    restart: always
    ports:
      - '${REDIS_PORT:-6379}:6379'
    volumes:
      - redis_data:/data
    command: ['redis-server', '--save', '60', '1', '--loglevel', 'warning']
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:
