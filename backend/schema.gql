# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Customer {
  id: Float!
  name: String!
  reservations: [Reservation!]
}

"""A reservation in the system"""
type Reservation {
  """Unique ID of the reservation"""
  id: Float!
  date: String!

  """Time of the reservation (HH:MM)"""
  time: String!

  """Number of guests for the reservation"""
  guests: Float!

  """Customer who made the reservation"""
  customer: Customer!
}

type ListInfo {
  totalItems: Int!
}

type ReservationPaginationOutput {
  items: [Reservation!]!
  listInfo: ListInfo!
}

type CreateReservationOutput {
  message: String!
  availableSlots: [String!]
  reservation: Reservation
}

type CheckAvailabilityOutput {
  message: String!

  """Available time slots"""
  availableSlots: [String!]
}

type User {
  id: ID!
  username: String!
  role: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  """Get all reservations from the database"""
  getReservations(filter: ReservationFilterInput, pagination: PaginationInput, sort: SortInput): ReservationPaginationOutput!

  """Check if a specific time slot is available"""
  checkAvailability(data: CheckAvailabilityInput!): CheckAvailabilityOutput!
  users: [User!]!
}

input ReservationFilterInput {
  customerName: String
  date: String
  guests: Int
}

input PaginationInput {
  page: Int = 1
  limit: Int = 10
}

input SortInput {
  sortBy: String
  order: String = "ASC"
}

input CheckAvailabilityInput {
  date: String!
  time: String
  timeRange: TimeRangeInput
  guests: Int!
}

input TimeRangeInput {
  """Start time in HH:mm format (24-hour)"""
  start: String!

  """End time in HH:mm format (24-hour)"""
  end: String!
}

type Mutation {
  """Create a new reservation"""
  createReservation(data: CreateReservationInput!): CreateReservationOutput!

  """Cancel a reservation by ID"""
  cancelReservation(id: Int!): Boolean!

  """Update an existing reservation"""
  updateReservation(data: UpdateReservationInput!): Reservation!
  createUser(input: CreateUserInput!): User!
  updateUser(username: String!, input: UpdateUserInput!): User!
}

input CreateReservationInput {
  """Name of the customer making the reservation"""
  customerName: String!

  """Date of the reservation (YYYY-MM-DD)"""
  date: String!

  """Time of the reservation (HH:MM)"""
  time: String!

  """Number of guests for the reservation"""
  guests: Float!
}

input UpdateReservationInput {
  """Name of the customer making the reservation"""
  customerName: String

  """Date of the reservation (YYYY-MM-DD)"""
  date: String

  """Time of the reservation (HH:MM)"""
  time: String

  """Number of guests for the reservation"""
  guests: Float
  id: Int!
}

input CreateUserInput {
  username: String!
  password: String!
  role: String
}

input UpdateUserInput {
  password: String
  role: String
}